generator client {
  provider = "prisma-client-js"
  output   = "./src/generated/client"

  //to use where in _count
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Parent {
  id             Int       @id @default(autoincrement())
  parentEmail    String    @unique
  parentName     String
  parentCnic     String    @unique
  parentPhone    String
  parentPassword String
  Meeting        Meeting[]
  Student        Student[]
}

model Admin {
  id               Int       @id @default(autoincrement())
  adminName        String
  adminPassword    String
  adminGender      String
  adminCnic        String @unique
  adminEmail       String   @unique
  adminDesignation String?
  Meeting          Meeting[]
  Role             Role[]
}

model Role {
  id      Int    @id @default(autoincrement())
  role    String
  adminId Int
  Admin   Admin  @relation(fields: [adminId], references: [id])
}

model Student {
  id              Int          @id @default(autoincrement())
  studentRegNo    String       @unique
  studentName     String       @unique
  studentPassword String
  parentId        Int
  Parent          Parent       @relation(fields: [parentId], references: [id])
  Meeting         Meeting[]
  StudentInfo     StudentInfo[]
  Subject         Subject[]
}

model StudentInfo {
  infoCgpa       Float
  infoAttendance Boolean
  studentId      Int     @id
  Student        Student @relation(fields: [studentId], references: [id])
}

model Subject {
  subjectName String
  studentId   Int
  Student     Student @relation(fields: [studentId], references: [id])

  @@id([subjectName, studentId])
}

model Meeting {
  id               Int        @id @default(autoincrement())
  meetingDay       String
  meetingStatus    Boolean
  meetingReason    String?
  adminId          Int
  studentId        Int
  parentId         Int
  meetingStartTime String
  meetingEndTime   String
  Admin            Admin      @relation(fields: [adminId], references: [id])
  Parent           Parent     @relation(fields: [parentId], references: [id])
  Student          Student    @relation(fields: [studentId], references: [id])
  Feedback         Feedback[]
}

model Feedback {
  id            Int     @id @default(autoincrement())
  meetingId     Int
  adminRemarks  String?
  parentRemarks String?
  Meeting       Meeting @relation(fields: [meetingId], references: [id])
}
